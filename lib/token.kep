/**
 * @fileOverview Khepri 5.1 lex tokens.
 */
package (
    Token,
    
    StringToken,
    NumberToken,
    RegularExpressionToken,
    BooleanToken,
    NullToken,
    
    IdentifierToken,
    KeywordToken,
    PunctuatorToken,
    
    CommentToken,
    WhitespaceToken,
    LineTerminatorToken)
{

/**
 * @constructor
 */
Token = function(loc, value) {
    this.loc = loc;
    this.value = value;
};

/**
 * @constructor
 */
StringToken = function(loc, value) {
    Token.call(this, loc, value);
};
StringToken.prototype = new Token;
StringToken.prototype.type = "String";
StringToken.prototype.constructor = StringToken;

/**
 * @constructor
 */
NumberToken = function(loc, value) {
    Token.call(this, loc, value);
};
NumberToken.prototype = new Token;
NumberToken.prototype.type = "Number";
NumberToken.prototype.constructor = NumberToken;

/**
 * @constructor
 */
RegularExpressionToken = function(loc, value) {
    Token.call(this, loc, value);
};
RegularExpressionToken.prototype = new Token;
RegularExpressionToken.prototype.type = "RegularExpression";
RegularExpressionToken.prototype.constructor = RegularExpressionToken;

/**
 * @constructor
 */
BooleanToken = function(loc, value) {
    Token.call(this, loc, value);
};
BooleanToken.prototype = new Token;
BooleanToken.prototype.type = "Boolean";
BooleanToken.prototype.constructor = BooleanToken;

/**
 * @constructor
 */
NullToken = function(loc, value) {
    Token.call(this, loc, value);
};
NullToken.prototype = new Token;
NullToken.prototype.type = "Null";
NullToken.prototype.constructor = NullToken;

/**
 * @constructor
 */
IdentifierToken = function(loc, value) {
    Token.call(this, loc, value);
};
IdentifierToken.prototype = new Token;
IdentifierToken.prototype.type = "Identifier";
IdentifierToken.prototype.constructor = IdentifierToken;

/**
 * @constructor
 */
KeywordToken = function(loc, value) {
    Token.call(this, loc, value);
};
KeywordToken.prototype = new Token;
KeywordToken.prototype.type = "Keyword";
KeywordToken.prototype.constructor = KeywordToken;

/**
 * @constructor
 */
PunctuatorToken = function(loc, value) {
    Token.call(this, loc, value);
};
PunctuatorToken.prototype = new Token;
PunctuatorToken.prototype.type = "Punctuator";
PunctuatorToken.prototype.constructor = PunctuatorToken;

/**
 * @constructor
 */
CommentToken = function(loc, value) {
    Token.call(this, loc, value);
};
CommentToken.prototype = new Token;
CommentToken.prototype.type = "Comment";
CommentToken.prototype.constructor = CommentToken;

/**
 * @constructor
 */
WhitespaceToken = function(loc, value) {
    Token.call(this, loc, value);
};
WhitespaceToken.prototype = new Token;
WhitespaceToken.prototype.type = "Whitespace";
WhitespaceToken.prototype.constructor = WhitespaceToken;

/**
 * @constructor
 */
LineTerminatorToken = function(loc, value) {
    Token.call(this, loc, value);
};
LineTerminatorToken.prototype = new Token;
LineTerminatorToken.prototype.type = "LineTerminator";
LineTerminatorToken.prototype.constructor = LineTerminatorToken;

}